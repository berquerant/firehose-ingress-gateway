// Code generated by "goconfig -field GetTimeout time.Duration -prefix Server -option -output amqp_config_generated.go"; DO NOT EDIT.

package amqp

import "time"

type ServerConfigItem[T any] struct {
	modified     bool
	value        T
	defaultValue T
}

func (s *ServerConfigItem[T]) Set(value T) {
	s.modified = true
	s.value = value
}
func (s *ServerConfigItem[T]) Get() T {
	if s.modified {
		return s.value
	}
	return s.defaultValue
}
func (s *ServerConfigItem[T]) Default() T {
	return s.defaultValue
}
func (s *ServerConfigItem[T]) IsModified() bool {
	return s.modified
}
func NewServerConfigItem[T any](defaultValue T) *ServerConfigItem[T] {
	return &ServerConfigItem[T]{
		defaultValue: defaultValue,
	}
}

type ServerConfig struct {
	GetTimeout *ServerConfigItem[time.Duration]
}
type ServerConfigBuilder struct {
	getTimeout time.Duration
}

func (s *ServerConfigBuilder) GetTimeout(v time.Duration) *ServerConfigBuilder {
	s.getTimeout = v
	return s
}
func (s *ServerConfigBuilder) Build() *ServerConfig {
	return &ServerConfig{
		GetTimeout: NewServerConfigItem(s.getTimeout),
	}
}

func NewServerConfigBuilder() *ServerConfigBuilder { return &ServerConfigBuilder{} }
func (s *ServerConfig) Apply(opt ...ServerConfigOption) {
	for _, x := range opt {
		x(s)
	}
}

type ServerConfigOption func(*ServerConfig)

func WithGetTimeout(v time.Duration) ServerConfigOption {
	return func(c *ServerConfig) {
		c.GetTimeout.Set(v)
	}
}
